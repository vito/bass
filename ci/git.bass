(def *image*
  "alpine/git")

(provide [resource]
  (def d (load (.durations)))

  (defn resource [uri]
    (defn clone-or-pull [tag]
      (from *image*
        (-> ($ git clone --recursive $uri ./)
            (with-label :tag (now d:day)))
        (-> ($ git pull)
            (with-label :tag tag))))

    (defn check optional-version
      (apply check-every [d:minute & optional-version]))

    (defn flatten-stream [thunk]
      (apply stream (next (run thunk))))

    (defn check-every [interval & optional-version]
      (flatten-stream
        (from (clone-or-pull (now interval))
          (-> ($ git rev-parse (case optional-version [v] v [] "HEAD"))
              (response-from :stdout "unix-table")))))

    (defn get [version]
      (path
        (from (clone-or-pull version)
          ($ git checkout $version))
        ./))

    {:check check
     :check-every check-every
     :get get}))

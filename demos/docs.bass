; Comments are syntactic sugar for setting the :doc metadata on the adjacent
; value.
;
; A blank line separates paragraphs. Sentences in a paragraph may be wrapped to
; span multiple lines.

; The *docs* binding provides documentation for its scope. Its attached comment
; will be used as top-level documentation.
;
; The *docs* binding's value must be _ (ignore), indicating the docs should
; include all documented bindings. More advanced forms may be supported in the
; future to support categorizing the bindings into separate sections.
(def *docs*
  _)

; Comments associated to symbols are recorded under the symbol in the current
; scope.
;
; This is typically used with (def) which returns foo.
(def foo 123)

; Keywords are symbol literals, so they can be used to document symbols ahead
; of their definition.
:bar

(def bar :hello)

; Keywords are typically used in scope literals. Used in combination, comments
; can be used to document a schema or config declaration.
(def some-config
  {; source code location
   :uri ""

   ; branch to checkout
   :branch "master"})

; The scope's commentary can be printed to stderr with (doc).
(doc)

; Printing the schema documentation would work with (doc) too.
(eval [doc] some-config)

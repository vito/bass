(use (.time))

; naive recursive fib
(defn fib [n]
  (if (< n 2)
    n
    (+ (fib (- n 2)) (fib (- n 1)))))

; tail-recursive fib
(defn fib-tail [n]
  (defn fib-iter [a b num]
    (if (= num 0)
      b
      (fib-iter (+ a b) a (- num 1))))

  (fib-iter 1 0 n))

(defn main []
  (time:measure (fib 20))
  (time:measure (fib-tail 20)))
